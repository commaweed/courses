# ========================================
# account
# ========================================

# change home directory for user (it's in /etc/passwd)
usermod -m -d /path/to/new/directory userNameHere

# centos password restriction file
/etc/pam.d/system-auth-ac

# ========================================
# search / find / file
# ========================================

# recursively remove .svn
find . -name .svn -exec rm -rf '{}' \;

# recursive find
find . | xargs grep "google"

# delete file over 7 days old
find -mtime +7 -delete

# find all files with an extension
du -a . | awk '{print $2}' | grep '\.rpm$'
find . -type f -name "*.rpm"
find . -type f -name \*.rpm

# ignore directory while finding a file
find . -type d -name "dir_to_ignore" -prune -o -type f -name "search_text" -print
find . -type f -name "search_text" ! -path '*/dir_to_ignore'
find . -path ./dir_to_ignore -prune -o -type -f -name "search_text" -print
find . -name "*.js" -not -path "./ignore/dir"

# redirect stderr to stdout 
find . -name file_name* 2>&1 | grep -v Permission

# other find examples
find . -type f -exec grep --include="*.java" "new JedisPool(" {} +

# size of directories or file systems
du -sh /dir/path
sudo du -cksh *
df -h

# some awk examples
cat file.csv | gawk -vFPAT='[^,]*|"[^"]*"' '{print "%20s|%7s|%7s\n", $2, $3, $4}' | awk 'length($2)>0' | head -n 100
cat file.csv | gawk -vFPAT='[^,]*|"[^"]*"' '{print $60}' | sort | uniq -c
cat file.csv |  gawk -vFPAT='[^,]*|"[^"]*"' '{print "%20s|%7s|%7s\n", $2, $3, $4}' | awk -F "|" '$4=="  LAC" || $4=="     "' | head -n 10 
cat file.csv | tail -n +2 | awk -F "," '{print $3,$4,$9,$5}' | awk {print length, $0}' | sort -n -s | cut -d" " -f2- | awk 'NF>3' | sort | uniq -u | awk -F " " 'length($1)==5 && length($2)==5' | wc -l
INGEST_PID=`(jsp | grep -i "${INGEST_MAIN_CLASS}" | awk '{print $1}')`
awk -F '[\[]+|[\]]' '{print $2}' file.txt | sort | uniq -c
cat file.csv | tail -n +2 | awk -F "," '{print $3,$4,$9,$5}' | awk 'NF==4' | awk '{printf "%05i.$05i.%03i..%05i\n", $1,$2,$4,$3}' | sort -s | uniq -u
cat file.csv | tail -n +2 | awk -F "," '{print $3,$4,$9,$5}' | awk 'NF==4' | awk 'length($3)!=5' | wc -l
cat file.csv | tail -n +2 | awk -F "," '{print $3,$4,$9,$5}' | awk '{print length, $0}' | sort -n -s | cut -d" " -f2- | awk 'NF>3' } sort | uniq -u | awk -F " " 'length($1)==5 && length($2)==5 && length($3)==5' | wc -l

# ========================================
# memory / host
# ========================================

# out of memory commands
egrep "High|low' /proc/meminfo
vmstat -SM 45 10

# view memory
free -m
cat /proc/meminfo
vmstat -s
top
htop
smem # --help

# view centos version
hostnamectl
rpm --query centos-release
cat /etc/centos-release

# ========================================
# service
# ========================================

# identifying services that start at each runlevel
/sbin/chkconfig --list

# ========================================
# centos 7 services (systemctl)
# ========================================

# service directory
/etc/systemd/system # e.g. /etc/systemd/multi-user.target.wants/rndg.service -> /user/lib/systemd/system/rngc.service

# systemd service 
sudo systemctl start application.service # start
sudo systemctl start application # start alternative: it knows to search for .service files
sudo systemctl restart application.service 
sudo systemctl reload application.service
sudo systemctl reload-or-restart application.service
sudo systemctl enable application.service # systemd looks for autostart files in /etc/systemd/system/some_target.target.wants
sudo systemctl disable application.service # removes the symbolic link
systemctl status application.service
systemctl is-active application-service
systemctl is-enabled application.service
systemctl is-failed application.service
systemctl cat sshd.service # display a unit file (in this case the ssh deamon)

# displaying service dependencies
systemctl list-dependencies sshd.service

# display a unit file
systemctl cat sshd.service

# checking unit properties
systemctl show sshd.service

# edit a unit file (first one is snippet)
sudo systemctl edit application.service
sudo systemctl edit --full application.service

# view a unit file
cat /usr/lib/systemd/system/rngd.service

# display list of services that are running
systemctl -t service
# LOAD - reflects whether the unit definition was properly loaded
# ACTIVE - the high-level unit activation state, i.e. generalization of SUB
# SUB - the low-level unit activation state, values depend on unit type

# display list of all services (or current ones)
systemctl list-unit-files -t service
systemctl list-unit-files | grep xrdp
systemctl list-units
systemctl list-units --all --state=inactive # not running
systemctl list-units --all --state=active # running
systemctl list-units --all --state=service

# SysV services are controlled by chkconfig
chkconfig --list
chkconfig netconsole off

# enable service on boot
systemctl enable docker.service
systemctl status docker.servfice | grep loaded

# stop and turn off auto-start setting (postfix is the service name)
systemctl stop postfix
systemctl disable postfix
rm '/etc/systemd/system/multi-user.target.wants/postfix.service'

# ========================================
# rpm  
# ========================================

# query an rpm
rpm -q {package}
rpm -qpi blah.rpm # display package info
rpm -qi blah
rpm -qpl blah.rpm # all files, to include configuration and documentation
rpm -ql blah
rpm -qpc blah.rpm # configuration files
rpm -qc blah
rpm -qpd blah.rpm # documentation files
rpm -qd blah 
rpm -qp --changelog blah.rpm # to see changes and bug fixes
rpm -qpR blah.rpm # dependencies
prm -qR blah

# cheat sheet
# -i install
# -U update
# -e erase (remove)
# -h print hash marks as the package archive is unpacked (progress meters of sorts)
# -v verbose display
# -V verify 
# --nodeps no dependencies
rpm -ivh blah.rpm 
rpm -ivh --nodeps blah.rpm 
rpm -Uvh blah.rpm
rpm -ev blah
rpm -ev --nodeps blah
rpm -Vp blah.rpm
rpm -Va

# build rpm
rpmbuild --bb spec.file

# extract to local directory
rpm2cpio name | cpio -idmv

# list all installed software
rpm -qa | less
sudo yum list

# see which rpm a command is in so it can be installed
rpm -qa | grep locate
sudo yum install mlocate; sudo updatedb

# ========================================
# yum 
# ========================================

# yum repo
/etc/yum.repos.d

# display information about a package or repo
yum info {package}              
yum repolist
yum reppkgs "reponame" {cmd}
yum makecache
yum check
yum history
show-installed
verifytree
yumdownloader
yum-complete-transaction
repotrack
repoquery
repoclosure
needs-restarting
find-repos-of-install

# list packages or search a pacakge
yum list available
yum list installed
yum list all
yum list kernel
yum deplist {package}
yum grouplist
yum groupinfo "group name"
yum search {term}
yum provides "*dir/file"

# clean or update a package (or yum)
yum updateinfo
yum check-update
yum update
yum update {package}
yum update-to {version}
yum clean all
yum clean packages

# install a package or a group of packages
yum install {package}
yum localinstall {package}
yum groupinstall "group name"
yum reinstall {package}
yum swap {pack1} {pack2}
yum remove {package}
yum erase {package}
yum auto remove {package}
yum downgrade {package}
yum upgrade {package}

# ========================================
# vim
# ========================================

# global replace
:%s/search_string/replace_string/g
:%s/\n\n/\r/g

# replace current line only 
:s/foo/bar/gci

# change each foo to bar for all lines 5-12 (inclusive)
:5,12s/foo/bar/g

# change each foo to bar for current line to end (inclusive)
:.,$/foo/bar/g

# turn off line numbers
:set number
:set nonumber 

# wrap
:set wrap
:set nowrap

# paste
:set paste
:set nopaste

# clear search highlight
:noh
:let @/=""

# set text width
:set textwidth=120

# ========================================
# linux ls colors
# ========================================

# show current colors
dircolors --print-database

# can either plain in ~/.dir_colors or add export LS_COLORS to .bashrc
export LS_COLORS="key=effect;color:key=effect;color"

# keys
no  normal
fi  file
di  dir
ln  symbolic link
pi  fifo pipe
do  door
bd  block device
cd  character device
or  orphan (symbolic link pertaining to a non-existent file)
so  socket
su  file that is setuid (u+s) 
sg  file that is setgid (g+s)
tw  directory that is other-writable - sticky bit like /tmp - (+t, o+w)
ow  other-writeable directory (o+w)
st  directory with the sticky bit set (+t)
ex  executable file
mi  missing symbolic link
lc  left opening terminal code
rc  right opening terminal code
ec  endcode; end non-filename exists

# effects
00  None
01  Bold
04  Underlined
05  Flashing Text
07  Reversed
08  Concealed

# ANSI colors
30  Black (or blue)
31  Red
33  Yellow (or Orange)
34  Blue
35  Purple
36  Cyan (or Black)
37  White (or lt. grey)

# Extra colors
90  Dark Grey
91  Light Red
92  Light Green
93  Yelow
94  Light Blue
95  Light Purple
96  Turquoise (or Blue)
97  White

# backgrounds
40  Black
41  Red
42  Green
43  Yelow (or Orange)
44  Blue
45  Purple
46  Cyan (or Black)
47  White

# extra backgrounds
100  Dark Grey
101  Light Red
102  Light Green
103  Yelow
104  Light Blue
105  Light Purple
106  Turquoise 

# ========================================
# other
# ========================================

# fonts
fc-cache -f -v

# process tree
pstree -p


