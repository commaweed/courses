# ========================================
# account
# ========================================

# change home directory for user (it's in /etc/passwd)
usermod -m -d /path/to/new/directory userNameHere

# centos password restriction file
/etc/pam.d/system-auth-ac

# ========================================
# search / find / file
# ========================================

# recursively remove .svn
find . -name .svn -exec rm -rf '{}' \;

# recursive find
find . | xargs grep "google"

# delete file over 7 days old
find -mtime +7 -delete

# find all files with an extension
du -a . | awk '{print $2}' | grep '\.rpm$'
find . -type f -name "*.rpm"
find . -type f -name \*.rpm

# ignore directory while finding a file
find . -type d -name "dir_to_ignore" -prune -o -type f -name "search_text" -print
find . -type f -name "search_text" ! -path '*/dir_to_ignore'
find . -path ./dir_to_ignore -prune -o -type -f -name "search_text" -print
find . -name "*.js" -not -path "./ignore/dir"

# redirect stderr to stdout 
find . -name file_name* 2>&1 | grep -v Permission

# other find examples
find . -type f -exec grep --include="*.java" "new JedisPool(" {} +

# size of directories or file systems
du -sh /dir/path
sudo du -cksh *
df -h

# ========================================
# memory / host
# ========================================

# out of memory commands
egrep "High|low' /proc/meminfo
vmstat -SM 45 10

# view memory
free -m
cat /proc/meminfo
vmstat -s
top
htop
smem # --help

# view centos version
hostnamectl
rpm --query centos-release
cat /etc/centos-release

# ========================================
# service
# ========================================

# identifying services that start at each runlevel
/sbin/chkconfig --list

# centos 7 services (systemctl)
# =============================

# service directory
/etc/systemd/system # e.g. /etc/systemd/multi-user.target.wants/rndg.service -> /user/lib/systemd/system/rngc.service

# systemd service 
sudo systemctl start application.service # start
sudo systemctl start application # start alternative: it knows to search for .service files
sudo systemctl restart application.service 
sudo systemctl reload application.service
sudo systemctl reload-or-restart application.service
sudo systemctl enable application.service # systemd looks for autostart files in /etc/systemd/system/some_target.target.wants
sudo systemctl disable application.service # removes the symbolic link
systemctl status application.service
systemctl is-active application-service
systemctl is-enabled application.service
systemctl is-failed application.service
systemctl list-units
systemctl list-units --all --state=inactive # not running
systemctl list-units --all --state=active # running
systemctl list-units --all --state=service
systemctl cat sshd.service # display a unit file (in this case the ssh deamon)
systemctl list-dependencies sshd.service
systemctl show sshd.service
sudo systemctl edit application.service # snippet
sudo systemctl edit --full application.service

# ========================================
# rpm  
# ========================================

# query an rpm
rpm -q {package}
rpm -qpi blah.rpm # display package info
rpm -qi blah
rpm -qpl blah.rpm # all files, to include configuration and documentation
rpm -ql blah
rpm -qpc blah.rpm # configuration files
rpm -qc blah
rpm -qpd blah.rpm # documentation files
rpm -qd blah 
rpm -qp --changelog blah.rpm # to see changes and bug fixes
rpm -qpR blah.rpm # dependencies
prm -qR blah

# cheat sheet
# -i install
# -U update
# -e erase (remove)
# -h print hash marks as the package archive is unpacked (progress meters of sorts)
# -v verbose display
# -V verify 
# --nodeps no dependencies
rpm -ivh blah.rpm 
rpm -ivh --nodeps blah.rpm 
rpm -Uvh blah.rpm
rpm -ev blah
rpm -ev --nodeps blah
rpm -Vp blah.rpm
rpm -Va

# build rpm
rpmbuild --bb spec.file

# extract to local directory
rpm2cpio name | cpio -idmv

# list all installed software
rpm -qa | less
sudo yum list

# see which rpm a command is in so it can be installed
rpm -qa | grep locate
sudo yum install mlocate; sudo updatedb

# ========================================
# yum 
# ========================================

# yum repo
/etc/yum.repos.d

# display information about a package or repo
yum info {package}              
yum repolist
yum reppkgs "reponame" {cmd}
yum makecache
yum check
yum history
show-installed
verifytree
yumdownloader
yum-complete-transaction
repotrack
repoquery
repoclosure
needs-restarting
find-repos-of-install

# list packages or search a pacakge
yum list available
yum list installed
yum list all
yum list kernel
yum deplist {package}
yum grouplist
yum groupinfo "group name"
yum search {term}
yum provides "*dir/file"

# clean or update a package (or yum)
yum updateinfo
yum check-update
yum update
yum update {package}
yum update-to {version}
yum clean all
yum clean packages

# install a package or a group of packages
yum install {package}
yum localinstall {package}
yum groupinstall "group name"
yum reinstall {package}
yum swap {pack1} {pack2}
yum remove {package}
yum erase {package}
yum auto remove {package}
yum downgrade {package}
yum upgrade {package}

# ========================================
# vim
# ========================================

# global replace
:%s/search_string/replace_string/g
:%s/\n\n/\r/g

# replace current line only 
:s/foo/bar/gci

# change each foo to bar for all lines 5-12 (inclusive)
:5,12s/foo/bar/g

# change each foo to bar for current line to end (inclusive)
:.,$/foo/bar/g

# turn off line numbers
:set number
:set nonumber 

# wrap
:set wrap
:set nowrap

# paste
:set paste
:set nopaste

# clear search highlight
:noh
:let @/=""

# set text width
:set textwidth=120

# ========================================
# other
# ========================================

# fonts
fc-cache -f -v
